@typeparam TableItem

@namespace BlazorDataGrid
@using Microsoft.AspNetCore.Components.Web
@using BlazorDataGrid.Services
@inject AppState AppState
@using BlazorDataGrid.Helpers


@if (ShowTotalResult)
{
    if (@Items.Count() != @initCount)
    {
        <h4 class="TotalCount" style="float:left">@(ItemList.Count() <= 1 ? Translation["filteredresults"] : Translation["filteredresultsplural"])</h4>
    }
    else
    {
        <h4 class="TotalCount" style="float:left">@(Items.Count() <= 1 ? Translation["totalresult"] : Translation["totalresultplural"])</h4>
    }
}
@if (ShowPageSelector)
{
    <div class="form-inline" style="float:right">
        <label class="my-1 mr-2" for="inlineFormCustomSelectPref">@Translation["selector"]</label>

        <select @bind="@PageSize" style="margin-right:5px" class="custom-select my-1 mr-sm-2" id="inlineFormCustomSelectPref">
            @foreach (var item in PageSizeList)
            {
                <option value="@item.Value">@item.Label</option>
            }
        </select>
    </div>
}
<table class="@TableClass" style="@TableStyle">
    <thead class="@TheadClass" style="@TheadStyle">
        <tr>
            <CascadingValue Value="this">
                @BlazorDataGridColumn
            </CascadingValue>
        </tr>

    </thead>
    <tbody class="@TbodyClass" style="@TbodyStyle">
        @if (LoadingRow)
        {
            <tr>@Translation["loading"]</tr>
        }
        else
        {
            @OtherContent
            @foreach (var item in ItemList)
            {
                @if (Editable)
                {
                    @*<tr class="blazor-row-item" contenteditable @onfocusout="Focusouttest">@GridRow(item)</tr>*@
                    <tr class="blazor-row-item">
                        @foreach (var elt in typeof(TableItem).GetProperties())
                        {
                            @*@if (elt.PropertyType == typeof(DateTime))
                                {
                                    <td contenteditable>@DisplayHelper.DisplayDate(item.GetType().GetProperty(elt.Name).GetValue(item, null), "dd/MM/yyyy")</td>
                                }
                                else
                                {
                                    <td contenteditable>@item.GetType().GetProperty(elt.Name).GetValue(item, null)</td>
                                }*@
                            <td contenteditable>@item.GetType().GetProperty(elt.Name).GetValue(item, null)</td>
                        }
                    </tr>
                }
                else
                {
                    <tr class="blazor-row-item">@GridRow(item)</tr>
                }
            }
        }
    </tbody>
</table>
<div class="pagination">
    <ul class="pagination">
        <li class="page-item @(endPage - pagerSize <= 1 ? "disabled":"")">
            <button class="page-link" @onclick=@(async () => NavigateToPage(Direction.PreviousSegment))>&laquo;</button>
        </li>
        <li class="page-item @(curPage==1?"disabled":"")">
            <button class="page-link" @onclick=@(async () => NavigateToPage(Direction.Previous)) tabindex="-1" aria-disabled="true">@Translation["previous"]</button>
        </li>
        @for (int i = startPage; i <= endPage; i++)
        {
            var currentPage = i;
            <li class="page-item @(currentPage==curPage?"active":"")">
                <button class="page-link" @onclick=@(async () => UpdateList(currentPage))>
                    @currentPage
                </button>
            </li>
        }
        <li class="page-item @(curPage==totalPages?"disabled":"")">
            <button class="page-link" @onclick=@(async () => NavigateToPage(Direction.Next)) tabindex="-1" aria-disabled="true">@Translation["next"]</button>
        </li>
        <li class="page-item @(startPage + pagerSize >= totalPages ? "disabled":"")">
            <button class="page-link" @onclick=@(async () => NavigateToPage(Direction.NextSegment))>&raquo;</button>
        </li>
    </ul>

    <span class="pagebutton btn btn-link disabled">@Translation["pages"]</span>

</div>

